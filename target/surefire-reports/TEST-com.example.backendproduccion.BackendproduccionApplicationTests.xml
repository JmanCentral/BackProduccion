<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.example.backendproduccion.BackendproduccionApplicationTests" time="87.535" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="C:\Users\r 3\Desktop\backendproduccion\target\test-classes;C:\Users\r 3\Desktop\backendproduccion\target\classes;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.3.5\spring-boot-starter-data-rest-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.3.5\spring-data-rest-webmvc-4.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-rest-core\4.3.5\spring-data-rest-core-4.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\hateoas\spring-hateoas\2.3.3\spring-hateoas-2.3.3.jar;C:\Users\r 3\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\r 3\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\r 3\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.5\spring-boot-starter-jdbc-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.5\spring-boot-starter-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot\3.3.5\spring-boot-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.5\spring-boot-autoconfigure-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.5\spring-boot-starter-logging-3.3.5.jar;C:\Users\r 3\.m2\repository\ch\qos\logback\logback-classic\1.5.11\logback-classic-1.5.11.jar;C:\Users\r 3\.m2\repository\ch\qos\logback\logback-core\1.5.11\logback-core-1.5.11.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\r 3\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\r 3\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\r 3\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\r 3\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-jdbc\6.1.14\spring-jdbc-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-beans\6.1.14\spring-beans-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-tx\6.1.14\spring-tx-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.5\spring-boot-starter-web-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.5\spring-boot-starter-json-3.3.5.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.5\spring-boot-starter-tomcat-3.3.5.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.31\tomcat-embed-core-10.1.31.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.31\tomcat-embed-el-10.1.31.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.31\tomcat-embed-websocket-10.1.31.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-web\6.1.14\spring-web-6.1.14.jar;C:\Users\r 3\.m2\repository\io\micrometer\micrometer-observation\1.13.6\micrometer-observation-1.13.6.jar;C:\Users\r 3\.m2\repository\io\micrometer\micrometer-commons\1.13.6\micrometer-commons-1.13.6.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-webmvc\6.1.14\spring-webmvc-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-aop\6.1.14\spring-aop-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-context\6.1.14\spring-context-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-expression\6.1.14\spring-expression-6.1.14.jar;C:\Users\r 3\.m2\repository\org\modelmapper\modelmapper\2.4.5\modelmapper-2.4.5.jar;C:\Users\r 3\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\r 3\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\r 3\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-log4j2\3.3.5\spring-boot-starter-log4j2-3.3.5.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.23.1\log4j-slf4j2-impl-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-jul\2.23.1\log4j-jul-2.23.1.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.5\spring-boot-starter-data-jpa-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.5\spring-boot-starter-aop-3.3.5.jar;C:\Users\r 3\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\r 3\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\r 3\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\r 3\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r 3\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\r 3\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r 3\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\r 3\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\r 3\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\r 3\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\r 3\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r 3\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-jpa\3.3.5\spring-data-jpa-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-commons\3.3.5\spring-data-commons-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-orm\6.1.14\spring-orm-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-aspects\6.1.14\spring-aspects-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.5\spring-boot-starter-test-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-test\3.3.5\spring-boot-test-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.5\spring-boot-test-autoconfigure-3.3.5.jar;C:\Users\r 3\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\r 3\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\r 3\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\r 3\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\r 3\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\r 3\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\r 3\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\r 3\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\r 3\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.5\junit-jupiter-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.5\junit-jupiter-api-5.10.5.jar;C:\Users\r 3\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r 3\.m2\repository\org\junit\platform\junit-platform-commons\1.10.5\junit-platform-commons-1.10.5.jar;C:\Users\r 3\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.5\junit-jupiter-params-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.5\junit-jupiter-engine-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\platform\junit-platform-engine\1.10.5\junit-platform-engine-1.10.5.jar;C:\Users\r 3\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\r 3\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\r 3\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\r 3\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\r 3\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\r 3\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-core\6.1.14\spring-core-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-jcl\6.1.14\spring-jcl-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-test\6.1.14\spring-test-6.1.14.jar;C:\Users\r 3\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/Bogota"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="CO"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
    <property name="sun.java.command" value="C:\Users\r 3\AppData\Local\Temp\surefire12656168023047653390\surefirebooter-20241112105824371_3.jar C:\Users\r 3\AppData\Local\Temp\surefire12656168023047653390 2024-11-12T10-58-23_778-jvmRun1 surefire-20241112105824371_1tmp surefire_0-20241112105824371_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Users\r 3\Desktop\backendproduccion\target\test-classes;C:\Users\r 3\Desktop\backendproduccion\target\classes;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.3.5\spring-boot-starter-data-rest-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.3.5\spring-data-rest-webmvc-4.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-rest-core\4.3.5\spring-data-rest-core-4.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\hateoas\spring-hateoas\2.3.3\spring-hateoas-2.3.3.jar;C:\Users\r 3\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\r 3\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.17.2\jackson-databind-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.17.2\jackson-core-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.17.2\jackson-annotations-2.17.2.jar;C:\Users\r 3\.m2\repository\org\slf4j\slf4j-api\2.0.16\slf4j-api-2.0.16.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.3.5\spring-boot-starter-jdbc-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter\3.3.5\spring-boot-starter-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot\3.3.5\spring-boot-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.3.5\spring-boot-autoconfigure-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.3.5\spring-boot-starter-logging-3.3.5.jar;C:\Users\r 3\.m2\repository\ch\qos\logback\logback-classic\1.5.11\logback-classic-1.5.11.jar;C:\Users\r 3\.m2\repository\ch\qos\logback\logback-core\1.5.11\logback-core-1.5.11.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.23.1\log4j-to-slf4j-2.23.1.jar;C:\Users\r 3\.m2\repository\org\slf4j\jul-to-slf4j\2.0.16\jul-to-slf4j-2.0.16.jar;C:\Users\r 3\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\r 3\.m2\repository\org\yaml\snakeyaml\2.2\snakeyaml-2.2.jar;C:\Users\r 3\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-jdbc\6.1.14\spring-jdbc-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-beans\6.1.14\spring-beans-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-tx\6.1.14\spring-tx-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.3.5\spring-boot-starter-web-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.3.5\spring-boot-starter-json-3.3.5.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.17.2\jackson-datatype-jdk8-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.17.2\jackson-datatype-jsr310-2.17.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.17.2\jackson-module-parameter-names-2.17.2.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.3.5\spring-boot-starter-tomcat-3.3.5.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.31\tomcat-embed-core-10.1.31.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.31\tomcat-embed-el-10.1.31.jar;C:\Users\r 3\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.31\tomcat-embed-websocket-10.1.31.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-web\6.1.14\spring-web-6.1.14.jar;C:\Users\r 3\.m2\repository\io\micrometer\micrometer-observation\1.13.6\micrometer-observation-1.13.6.jar;C:\Users\r 3\.m2\repository\io\micrometer\micrometer-commons\1.13.6\micrometer-commons-1.13.6.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-webmvc\6.1.14\spring-webmvc-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-aop\6.1.14\spring-aop-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-context\6.1.14\spring-context-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-expression\6.1.14\spring-expression-6.1.14.jar;C:\Users\r 3\.m2\repository\org\modelmapper\modelmapper\2.4.5\modelmapper-2.4.5.jar;C:\Users\r 3\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\r 3\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\r 3\.m2\repository\org\projectlombok\lombok\1.18.34\lombok-1.18.34.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-log4j2\3.3.5\spring-boot-starter-log4j2-3.3.5.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-slf4j2-impl\2.23.1\log4j-slf4j2-impl-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-api\2.23.1\log4j-api-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-core\2.23.1\log4j-core-2.23.1.jar;C:\Users\r 3\.m2\repository\org\apache\logging\log4j\log4j-jul\2.23.1\log4j-jul-2.23.1.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.3.5\spring-boot-starter-data-jpa-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-aop\3.3.5\spring-boot-starter-aop-3.3.5.jar;C:\Users\r 3\.m2\repository\org\aspectj\aspectjweaver\1.9.22.1\aspectjweaver-1.9.22.1.jar;C:\Users\r 3\.m2\repository\org\hibernate\orm\hibernate-core\6.5.3.Final\hibernate-core-6.5.3.Final.jar;C:\Users\r 3\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\r 3\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\r 3\.m2\repository\org\jboss\logging\jboss-logging\3.5.3.Final\jboss-logging-3.5.3.Final.jar;C:\Users\r 3\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\r 3\.m2\repository\io\smallrye\jandex\3.1.2\jandex-3.1.2.jar;C:\Users\r 3\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\r 3\.m2\repository\net\bytebuddy\byte-buddy\1.14.19\byte-buddy-1.14.19.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\r 3\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\r 3\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\r 3\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\r 3\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\r 3\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-jpa\3.3.5\spring-data-jpa-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\data\spring-data-commons\3.3.5\spring-data-commons-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-orm\6.1.14\spring-orm-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-aspects\6.1.14\spring-aspects-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.3.5\spring-boot-starter-test-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-test\3.3.5\spring-boot-test-3.3.5.jar;C:\Users\r 3\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.3.5\spring-boot-test-autoconfigure-3.3.5.jar;C:\Users\r 3\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\r 3\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\r 3\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\r 3\.m2\repository\net\minidev\json-smart\2.5.1\json-smart-2.5.1.jar;C:\Users\r 3\.m2\repository\net\minidev\accessors-smart\2.5.1\accessors-smart-2.5.1.jar;C:\Users\r 3\.m2\repository\org\ow2\asm\asm\9.6\asm-9.6.jar;C:\Users\r 3\.m2\repository\org\assertj\assertj-core\3.25.3\assertj-core-3.25.3.jar;C:\Users\r 3\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\r 3\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter\5.10.5\junit-jupiter-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.5\junit-jupiter-api-5.10.5.jar;C:\Users\r 3\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\r 3\.m2\repository\org\junit\platform\junit-platform-commons\1.10.5\junit-platform-commons-1.10.5.jar;C:\Users\r 3\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.10.5\junit-jupiter-params-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.10.5\junit-jupiter-engine-5.10.5.jar;C:\Users\r 3\.m2\repository\org\junit\platform\junit-platform-engine\1.10.5\junit-platform-engine-1.10.5.jar;C:\Users\r 3\.m2\repository\org\mockito\mockito-core\5.11.0\mockito-core-5.11.0.jar;C:\Users\r 3\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar;C:\Users\r 3\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\r 3\.m2\repository\org\mockito\mockito-junit-jupiter\5.11.0\mockito-junit-jupiter-5.11.0.jar;C:\Users\r 3\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\r 3\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-core\6.1.14\spring-core-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-jcl\6.1.14\spring-jcl-6.1.14.jar;C:\Users\r 3\.m2\repository\org\springframework\spring-test\6.1.14\spring-test-6.1.14.jar;C:\Users\r 3\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\r 3"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-01-16"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Users\r 3\Desktop\backendproduccion"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\r 3\AppData\Local\Temp\surefire12656168023047653390\surefirebooter-20241112105824371_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.2+13-LTS-58"/>
    <property name="user.name" value="r 3"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\r 3\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\R309CB~1\AppData\Local\Temp\"/>
    <property name="idea.version" value="2024.2.1"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="21.0.2"/>
    <property name="user.dir" value="C:\Users\r 3\Desktop\backendproduccion"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="11832"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Java\jdk-11.0.12\bin;C:\src\flutter\bin;C:\Program Files\nodejs\;C:\Program Files\Git\cmd;C:\Program Files\GitHub CLI\;C:\Program Files\Docker\Docker\resources\bin;C:\Users\r 3\AppData\Local\Programs\Python\Python311\Scripts;C:\Users\r 3\AppData\Local\Programs\Python\Python311;C:\src\flutter\bin;C:\Users\r 3\anaconda3;C:\Users\r 3\anaconda3\Library\mingw-w64\bin;C:\Users\r 3\anaconda3\Library\usr\bin;C:\Users\r 3\anaconda3\Library\bin;C:\Users\r 3\anaconda3\Scripts;C:\Program Files\Java\jdk-11.0.12\bin;C:\Users\r 3\AppData\Local\Microsoft\WindowsApps;C:\Program Files\MongoDB\Server\4.2\bin;C:\Users\r 3\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB\Server\7.0\bin;C:\Program Files\MongoDB\mongosh-2.3.0-win32-x64\bin;C:\Users\r 3\AppData\Roaming\npm;C:\Program Files\nodejs\node_modules\npm\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.2+13-LTS-58"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[BackendproduccionApplication] "/>
  </properties>
  <testcase name="contextLoads" classname="com.example.backendproduccion.BackendproduccionApplicationTests" time="1.097">
    <system-out><![CDATA[10:58:26.814 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.backendproduccion.BackendproduccionApplicationTests]: BackendproduccionApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
10:58:27.064 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.backendproduccion.BackendproduccionApplication for test class com.example.backendproduccion.BackendproduccionApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.3.5)

2024-11-12T10:58:27.938-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] c.e.b.BackendproduccionApplicationTests  : Starting BackendproduccionApplicationTests using Java 21.0.2 with PID 11832 (started by r 3 in C:\Users\r 3\Desktop\backendproduccion)
2024-11-12T10:58:27.941-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] c.e.b.BackendproduccionApplicationTests  : No active profile set, falling back to 1 default profile: "default"
2024-11-12T10:58:29.868-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-11-12T10:58:30.044-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 150 ms. Found 3 JPA repository interfaces.
2024-11-12T10:58:31.310-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-11-12T10:58:31.510-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.5.3.Final
2024-11-12T10:58:31.630-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-11-12T10:58:32.514-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-11-12T10:58:32.592-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-11-12T10:58:34.729-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5403431a
2024-11-12T10:58:34.731-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-11-12T10:58:35.329-05:00  WARN 11832 --- [BackendproduccionApplication] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-11-12T10:58:37.080-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: alter table if exists historial drop constraint if exists FKit14jawn9lfhtxvwwu711lcvb
Hibernate: alter table if exists historial drop constraint if exists FKeedo6qxv5od6tahr3iwwdlhdg
Hibernate: drop table if exists historial cascade
Hibernate: drop table if exists pregunta cascade
Hibernate: drop table if exists usuario cascade
Hibernate: create table historial (ayudas integer, puntaje integer, tiempo integer, id bigint generated by default as identity, id_pregunta bigint not null, id_usuario bigint not null, fecha varchar(255), primary key (id))
Hibernate: create table pregunta (estado boolean, id_pregunta bigint generated by default as identity, categoria varchar(255), dificultad varchar(255), op1 varchar(255), op2 varchar(255), op3 varchar(255), op4 varchar(255), pregunta varchar(255), respuesta varchar(255), primary key (id_pregunta))
Hibernate: create table usuario (id bigint generated by default as identity, email varchar(255), logro1 varchar(255), logro2 varchar(255), logro3 varchar(255), logro4 varchar(255), logro5 varchar(255), nivel varchar(255), password varchar(255), username varchar(255) unique, primary key (id))
Hibernate: alter table if exists historial add constraint FKit14jawn9lfhtxvwwu711lcvb foreign key (id_pregunta) references pregunta
Hibernate: alter table if exists historial add constraint FKeedo6qxv5od6tahr3iwwdlhdg foreign key (id_usuario) references usuario
2024-11-12T10:58:38.974-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-11-12T10:58:39.705-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
Hibernate: select p1_0.id_pregunta,p1_0.categoria,p1_0.dificultad,p1_0.estado,p1_0.op1,p1_0.op2,p1_0.op3,p1_0.op4,p1_0.pregunta,p1_0.respuesta from pregunta p1_0 where p1_0.pregunta=?
Hibernate: insert into pregunta (categoria,dificultad,estado,op1,op2,op3,op4,pregunta,respuesta) values (?,?,?,?,?,?,?,?,?) returning id_pregunta
2024-11-12T10:59:50.942-05:00  WARN 11832 --- [BackendproduccionApplication] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-11-12T10:59:52.589-05:00  INFO 11832 --- [BackendproduccionApplication] [           main] c.e.b.BackendproduccionApplicationTests  : Started BackendproduccionApplicationTests in 85.225 seconds (process running for 87.939)
]]></system-out>
    <system-err><![CDATA[SLF4J(W): Class path contains multiple SLF4J providers.
SLF4J(W): Found provider [ch.qos.logback.classic.spi.LogbackServiceProvider@fa4c865]
SLF4J(W): Found provider [org.apache.logging.slf4j.SLF4JServiceProvider@3bd82cf5]
SLF4J(W): See https://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J(I): Actual provider is of type [ch.qos.logback.classic.spi.LogbackServiceProvider@fa4c865]
WARNING: A Java agent has been loaded dynamically (C:\Users\r 3\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.19\byte-buddy-agent-1.14.19.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>